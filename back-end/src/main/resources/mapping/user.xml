<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.chatonline.Dao.UserDao">
    <select id="Login" resultType="com.example.chatonline.Model.User">
        select * from user where userId = #{id} and password=#{password}
    </select>
    <select id="QueryUser" resultType="com.example.chatonline.Model.User">
        select userId,sex,nickname from user where userId = #{id}
    </select>
    <insert id="Register" >
        insert into user(userId,nickname,password) value(#{userId},#{nickname},#{password})
    </insert>
    <select id="GroupFriends" resultType="map">
        select user.nickname,user.userId,user.sex,user.age,user.address,user.phone,user.signature,friendrelation.note,friendrelation.groupname,friendrelation.evaluate
        from user,friendrelation
        where user.userId in (select friendId from friendrelation where userId = #{userId}) and friendrelation.userId = #{userId} and friendrelation.friendId = user.userId
    </select>
    <select id="ShowGroup" resultType="com.example.chatonline.Model.Group">
        select groupname,count_num from friendgroup where userId = #{id}
    </select>
    <insert id="CreatGroup">
        insert into friendgroup(userId,groupname,count_num,flag)
        value (#{id},#{groupname},0,#{type});
    </insert>
    <delete id="DelGroup">
        delete  from friendgroup where userId = #{userId} and groupname = #{groupname}
    </delete>
    <select id="getDefGroupname" resultType="String">
        select groupname
        from friendgroup
        where userId = #{userId} and flag = 1
    </select>
    <select id="getFriendsId" resultType="map">
        select friendId
        from  friendrelation
        where userId = #{userId} and groupname = #{groupname}
    </select>
    <select id="FindRelation" resultType="boolean">
        select count(*) from friendrelation where userId = #{userId} and friendId=#{friendId}
    </select>
<!--    <insert id="AddFriend">-->
<!--        insert into friendrelation(userId,friendId,groupname,note) value (#{userId},#{friendId},#{groupname},#{note})-->
<!--    </insert>-->
<!--    <update id="AddGroupNum">-->
<!--        update friendgroup-->
<!--        set count_num=count_num+1-->
<!--        where userId=#{id} and groupname=#{groupname}-->
<!--    </update>-->
    <select id="AddFriend"  resultType="Integer" statementType="CALLABLE">
        call Addfriend(#{userId},#{friendId},#{groupnameA},#{groupnameB},#{noteA},#{noteB},#{flag,mode=OUT,jdbcType=INTEGER})
    </select>
    <update id="groupMove">
        update friendrelation
        set groupname=#{postGroupname}
        where userId=#{userId} and friendId=#{friendId}
    </update>
    <update id="preGroupnum">
        update friendgroup
        set count_num=count_num-1
        where groupname=#{preGroupname} and userId=#{userId}
    </update>
    <update id="postGroupnum">
        update friendgroup
        set count_num=count_num+1
        where groupname=#{postGroupname} and userId=#{userId}
    </update>
    <update id="UpdateInfo">
        update user
        set nickname=#{nickname},sex=#{sex},age=#{age},address=#{address},phone=#{phone},signature=#{signature}
        where userId=#{userId}
    </update>
    <select id="ShowInfo" resultType="com.example.chatonline.Model.User">
        select userId,nickname,sex,age,signature,address,phone
        from user
        where userId=#{userId}
    </select>
    <delete id="DeleteRelation">
        DELETE FROM friendrelation WHERE userId = #{userId} AND friendId=#{friendId};
    </delete>
</mapper>