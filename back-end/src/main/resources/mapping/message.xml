<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.chatonline.Dao.MessageDao">

    <insert id="InsertMessage" >
        insert into message(sendid,reciveid,sendtime,messagetext,texttype)
        value(#{sendid},#{reciveid},#{sendtime},#{messagetext},${texttype})
    </insert>

    <select id="FindVerifyMessage" resultType="map">
        select groupname,note from veritymessage where sendId = #{sendid} and reciveId=#{reciveid} and messagetype=0
    </select>
    <delete id="DelVerifyMessage">
        delete  from veritymessage where sendId=#{sendid} and reciveId=#{reciveid} and messagetype=0
    </delete>
    <insert id="AddVerifyMessage">
        insert into veritymessage() value(#{message.sendid},#{message.reciveid},#{message.sendtime},#{message.messagetext},0,#{groupname},#{note})
    </insert>
    <select id="ShowVerifyMessage" resultType="com.example.chatonline.Model.Message">
        select sendId,reciveId,sendtime,message messagetext,messagetype texttype from veritymessage where reciveId=#{reciveId}
    </select>
    <update id="HandleVerifyMessage">
        update veritymessage
        set messagetype=#{type}
        where sendId=#{userId} and reciveId=#{reciveId} and messagetype=0
    </update>
    <update id="Refuseadd">
        update veritymessage
        set messagetype=-1
        where reciveId=#{userId} and sendId=#{sendId} and sendtime=#{sendtime}
    </update>
    <delete id="DeleteVerifyMessage">
        delete from veritymessage
        where reciveId=#{userId} and sendId=#{sendId} and sendtime=#{sendtime}
    </delete>
    <select id="ShowsendLastMessage" resultType="map">
        select nickname,messagetxt,sendtime,reciveId,sendId from user,lastfriendmessage
        where sendId=#{userId} and reciveId=user.userId
    </select>
    <select id="ShowreciveLastMessage" resultType="map">
        select nickname,messagetxt,sendtime,sendId,reciveId from lastfriendmessage,user
        where reciveId=#{userId} and sendId=user.userId
    </select>
    <select id="DeleteAllMessage" resultType="Integer" statementType="CALLABLE">
        CALL Deletemessage(#{userId},#{friendId},#{flag,mode=OUT,jdbcType=INTEGER});
    </select>
    <insert id="addImage">
        insert into image(userId,friendId,message) value(#{userId},#{friendId},#{message})
    </insert>
    <delete id="DelImage">
        delete  from image where userId=#{userId} and friendId=#{friendId} and sendTime=#{sendtime}
    </delete>
    <delete id="DelReceiveImage">
        delete  from image where userId=#{sendid} and friendId=#{reciveid} and sendTime=#{sendtime}
    </delete>
    <select id="ShowImage" resultType="com.example.chatonline.Model.Image">
        select userId,friendId,sendtime ,message from image where friendId=#{reciveId}
    </select>
    <update id="ChangMark">
        update user set imageMark = #{note} where userId = #{userId}
    </update>
    <select id="GetImageMark" resultType="Integer">
        select imageMark from user where userId=#{friendId}
    </select>
</mapper>